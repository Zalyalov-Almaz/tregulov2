package _25deque;

import java.util.ArrayDeque;
import java.util.Deque;

public class ArrayDequeExample {

    public static void main(String[] args) {
        Deque <Integer> ints = new ArrayDeque<>();
        ints.addFirst(3); //добавляет элемент в начало коллекции, если коллекция уже заполнена и имеет фиксированный размер, бросает искл
        ints.addFirst(5);
        ints.addLast(7); //добавляет элемент в конец коллекции, если коллекция уже заполнена и имеет фиксированный размер, бросает искл
        ints.offerFirst(1);//добавляет элемент в начало коллекции, не бросает искл, если коллекция уже заполнена и имеет фиксированный размер
        ints.offerLast(8);//добавляет элемент в конец коллекции, не бросает искл, если коллекция уже заполнена и имеет фиксированный размер
        ints.removeFirst(); //возвращает первый элемент и удаляет его, если пуста - бросает искл
        ints.removeLast(); //возвращает последний элемент и удаляет его, если пуста - бросает искл
        ints.pollFirst(); //возвращает первый элемент и удаляет его, не бросает искл, даже если коллекция пуста
        ints.pollLast(); //возвращает последний элемент и удаляет его, не бросает искл, даже если коллекция пуста
        ints.getFirst(); //возвращает первый элемент, бросает искл, если очередь пуста
        ints.getLast(); //возвращает последний элемент, бросает искл, если очередь пуста
        ints.peekFirst(); //возвращает первый элемент, не бросает искл, даже если очередь пуста
        ints.peekLast(); //возвращает последний элемент, не бросает искл, даже если очередь пуста

        System.out.println(ints);
    }
}
//Deque - двунаправленная очередь, методо работают и с началом коллекции и с концом (то есть и как в Stack, и как в Queue)
//Интерфейс Deque реализуется классами LinkedList и ArrayDeque